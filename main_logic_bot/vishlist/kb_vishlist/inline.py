from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData
from utils.loader_token import Token
from functions.sqlite_work import BD


def create_select_vish(user_id: int) -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

    envirion_user_id = Token(key='HIS_ID').find()
    if str(user_id) == envirion_user_id:
        btn_text = '–ï—ë üíù'
    else:
        btn_text = '–ï–≥–æ üíù'

    select_vish = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='–ú–æ—ë üéÅ', callback_data='my'),
                InlineKeyboardButton(text=btn_text, callback_data='strange')
            ]
        ]
    )

    return select_vish


async def create_list_gifts(user_id: int, slice: int) -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –≤–∏–¥–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    data = await BD(path='gift.sqlite3').get_gifts(user_id=user_id)

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫
    data.sort(key=lambda el: el[2])
    list_btn = map(lambda gift: InlineKeyboardButton(text=f'<< {gift[2]} >>', callback_data=f'gift_id_{gift[0]}'), data)

    list_back_kb = [
        InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å ‚öíÔ∏è', callback_data='create_gift'),
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚§¥Ô∏è', callback_data='back')
    ]

    kb = InlineKeyboardBuilder()
    kb.row(*list_btn, width=1)
    kb.row(*list_back_kb[slice:])

    return kb.as_markup()


def create_kb_for_delete(gift_id: int, permission_delete: bool = False) -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""

    kb = InlineKeyboardBuilder()

    list_delete_kb = [
        InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å üöÆ', callback_data=f'delete_gift_{gift_id}'),
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚§¥Ô∏è', callback_data='my')
    ]

    if not permission_delete:
        list_delete_kb = list_delete_kb[1:]
        list_delete_kb[0].callback_data = 'strange'

    kb.row(*list_delete_kb, width=2)

    return kb.as_markup()


def create_delete(gift_id: int) -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""

    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data=f'yes_delete_{gift_id}'),
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚§¥Ô∏è', callback_data=f'gift_id_{gift_id}'),
        width=2
    )

    return kb.as_markup()
